// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test_Smart.Configuration;

#nullable disable

namespace Test_Smart.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241212170955_InitBase")]
    partial class InitBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Test_Smart.Entity.EquipmentType.EquipmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AreaPerUnit")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec80dcee-55c6-4763-9f74-4503a105e429"),
                            AreaPerUnit = 50.0,
                            CreationDate = new DateTime(2024, 12, 12, 17, 9, 54, 910, DateTimeKind.Utc),
                            Deleted = false,
                            Name = "Machine A"
                        },
                        new
                        {
                            Id = new Guid("9f9c6929-c8ed-49f3-9f2e-ff7280344589"),
                            AreaPerUnit = 70.0,
                            CreationDate = new DateTime(2024, 12, 12, 17, 9, 54, 910, DateTimeKind.Utc),
                            Deleted = false,
                            Name = "Machine B"
                        });
                });

            modelBuilder.Entity("Test_Smart.Entity.PlacementContract.PlacementContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EquipmentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionFacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("ProductionFacilityId");

                    b.ToTable("PlacementContracts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5539f319-bd82-4177-bff8-2cdd17dfa039"),
                            CreationDate = new DateTime(2024, 12, 12, 17, 9, 54, 910, DateTimeKind.Utc),
                            Deleted = false,
                            EquipmentTypeId = new Guid("ec80dcee-55c6-4763-9f74-4503a105e429"),
                            ProductionFacilityId = new Guid("c46b2433-7736-4933-840b-82b0855779c8"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("d56d9d17-8884-4c18-a524-5430b62d7edf"),
                            CreationDate = new DateTime(2024, 12, 12, 17, 9, 54, 910, DateTimeKind.Utc),
                            Deleted = false,
                            EquipmentTypeId = new Guid("9f9c6929-c8ed-49f3-9f2e-ff7280344589"),
                            ProductionFacilityId = new Guid("8e45e954-11b6-4431-9024-e79fa15a6465"),
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("Test_Smart.Entity.ProductionFacility.ProductionFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("StandardArea")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ProductionFacilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c46b2433-7736-4933-840b-82b0855779c8"),
                            CreationDate = new DateTime(2024, 12, 12, 17, 9, 54, 910, DateTimeKind.Utc),
                            Deleted = false,
                            Name = "Factory A",
                            StandardArea = 1000.0
                        },
                        new
                        {
                            Id = new Guid("8e45e954-11b6-4431-9024-e79fa15a6465"),
                            CreationDate = new DateTime(2024, 12, 12, 17, 9, 54, 910, DateTimeKind.Utc),
                            Deleted = false,
                            Name = "Factory B",
                            StandardArea = 800.0
                        });
                });

            modelBuilder.Entity("Test_Smart.Entity.PlacementContract.PlacementContract", b =>
                {
                    b.HasOne("Test_Smart.Entity.EquipmentType.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Test_Smart.Entity.ProductionFacility.ProductionFacility", "ProductionFacility")
                        .WithMany()
                        .HasForeignKey("ProductionFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");

                    b.Navigation("ProductionFacility");
                });
#pragma warning restore 612, 618
        }
    }
}
